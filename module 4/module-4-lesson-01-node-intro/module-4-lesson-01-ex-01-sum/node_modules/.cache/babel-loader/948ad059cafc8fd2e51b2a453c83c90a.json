{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/CVCAS/OneDrive/Desktop/ADALAB/ejercicios-de-adalab/module 3/module-3-lesson-10-components-lifecycle/module-3-lesson-10-ex-03-functional-counter/src/components/Counter.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport '../stylesheets/index.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  // usamos el hook useState para crear counter en el estado del componente\n  const [counter, setCounter] = useState(0); // usamos el hook useEffect para gestionar los ciclos de vida del componente\n\n  useEffect(() => {\n    // las 3 siguientes líneas se ejecutan al montar y renderizar el componente\n    let intervalId = setInterval(() => {\n      setCounter(counter + 1);\n    }, 1000); // la función retornada a continuación se ejecuta al desmontar y renderizar el componente\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Contador: \", counter]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Counter, \"uPkTgB8PBsujXy6a5mXWSxFNaD8=\");\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/mnt/c/Users/CVCAS/OneDrive/Desktop/ADALAB/ejercicios-de-adalab/module 3/module-3-lesson-10-components-lifecycle/module-3-lesson-10-ex-03-functional-counter/src/components/Counter.js"],"names":["React","Counter","counter","setCounter","useState","useEffect","intervalId","setInterval","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,2BAAP;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,CAAD,CAAtC,CAFoB,CAGpB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIC,UAAU,GAAGC,WAAW,CAAC,MAAM;AACjCJ,MAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,KAF2B,EAEzB,IAFyB,CAA5B,CAFc,CAKd;;AACA,WAAO,MAAM;AACXM,MAAAA,aAAa,CAACF,UAAD,CAAb;AACD,KAFD;AAGD,GATQ,CAAT;AAUA,sBAAO;AAAA,6BAAgBJ,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAfD;;GAAMD,O;;KAAAA,O;AAiBN,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport '../stylesheets/index.scss';\r\n\r\n\r\nconst Counter = () => {\r\n  // usamos el hook useState para crear counter en el estado del componente\r\n  const [counter, setCounter] = useState(0);\r\n  // usamos el hook useEffect para gestionar los ciclos de vida del componente\r\n  useEffect(() => {\r\n    // las 3 siguientes líneas se ejecutan al montar y renderizar el componente\r\n    let intervalId = setInterval(() => {\r\n      setCounter(counter + 1);\r\n    }, 1000);\r\n    // la función retornada a continuación se ejecuta al desmontar y renderizar el componente\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  });\r\n  return <div>Contador: {counter}</div>;\r\n};\r\n\r\nexport default Counter;"]},"metadata":{},"sourceType":"module"}